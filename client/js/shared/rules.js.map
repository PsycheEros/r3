{"version":3,"sources":["../../ts/shared/rules.ts"],"names":[],"mappings":"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","file":"rules.js","sourcesContent":["import Grid from './grid';\r\nimport Square from './square';\r\n\r\nconst directions: Point[] = [\r\n\t{ x:  0, y: -1 },\r\n\t{ x:  1, y: -1 },\r\n\t{ x:  1, y:  0 },\r\n\t{ x:  1, y:  1 },\r\n\t{ x:  0, y:  1 },\r\n\t{ x: -1, y:  1 },\r\n\t{ x: -1, y:  0 },\r\n\t{ x: -1, y: -1 }\r\n];\r\n\r\nfunction getAffectedSquares( grid: Grid<Square>, position: Point, color: number ): Square[] {\r\n\tif( !grid.boundsCheck( position ) ) { return []; }\r\n\tconst square = grid.get( position );\r\n\tif( !square || !square.empty || !square.enabled ) { return []; }\r\n\tfunction direction( { x, y }: Point, delta: Point ): Square[] {\r\n\t\tconst squares = [] as Square[];\r\n\t\tfor( ; ; ) {\r\n\t\t\tx += delta.x;\r\n\t\t\ty += delta.y;\r\n\t\t\tif( !grid.boundsCheck( { x, y } ) ) { return []; }\r\n\t\t\tconst square = grid.get( { x, y } );\r\n\t\t\tif( !square || square.empty || !square.enabled ) { return []; }\r\n\t\t\tif( square.color === color ) { return squares; }\r\n\t\t\tsquares.push( square );\r\n\t\t}\r\n\t}\r\n\tconst squares = [ square ];\r\n\tfor( const delta of directions ) {\r\n\t\tsquares.splice( squares.length, 0, ...direction( position, delta ) );\r\n\t}\r\n\tif( squares.length <= 1 ) { return []; }\r\n\treturn squares;\r\n}\r\n\r\nexport default class Rules {\r\n\tpublic isValid( grid: Grid<Square>, position: Point, color: number ) {\r\n\t\treturn getAffectedSquares( grid, position, color ).length > 0;\r\n\t}\r\n\r\n\tpublic getValidMoves( grid: Grid<Square>, color: number ) {\r\n\t\tconst squares = [] as Square[];\r\n\t\tfor( const square of grid ) {\r\n\t\t\tif( square && this.isValid( grid, square.position, color ) ) { squares.push( square ); }\r\n\t\t}\r\n\t\treturn squares;\r\n\t}\r\n\r\n\tpublic isGameOver( grid: Grid<Square>, colors: number[] ) {\r\n\t\tfor( const color of colors ) {\r\n\t\t\tif( this.getValidMoves( grid, color ).length > 0 ) { return false; }\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic makeMove( grid: Grid<Square>, position: Point, color: number ) {\r\n\t\tconst squares = getAffectedSquares( grid, position, color );\r\n\t\tfor( const square of squares ) {\r\n\t\t\tsquare.color = color;\r\n\t\t}\r\n\t\treturn squares.length;\r\n\t}\r\n\r\n\tpublic getScore( grid: Grid<Square>, color: number ) {\r\n\t\tlet score = 0;\r\n\t\tfor( const square of grid ) {\r\n\t\t\tif( square && square.enabled && square.color === color ) {\r\n\t\t\t\t++score;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn score;\r\n\t}\r\n}\r\n"]}