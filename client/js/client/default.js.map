{"version":3,"sources":["../../ts/client/default.ts"],"names":[],"mappings":"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","file":"default.js","sourcesContent":["import Canvas2D from './canvas2d';\r\nimport Canvas3D from './canvas3d';\r\nimport Board from '../shared/board';\r\nimport Square from '../shared/square';\r\nimport Rules from '../shared/rules';\r\n\r\nfunction createCanvas( width: number, height: number ) {\r\n\treturn document.body.appendChild(\r\n\t\tObject.assign( document.createElement( 'canvas' ), { width, height } )\r\n\t) as HTMLCanvasElement;\r\n}\r\n\r\nconst width = 960,\r\n\theight = 800,\r\n\tcanvas = {\r\n\t\t'2d': new Canvas2D( createCanvas( width, height ) ),\r\n\t\t'3d': new Canvas3D( createCanvas( width, height ) )\r\n\t};\r\n\r\n( () => {\r\n\tconst board = new Board( 8, 8 );\r\n\r\n\tfunction newGame() {\r\n\t\tboard.reset();\r\n\t\tboard.grid.get( { x: 3, y: 3 } )!.color = 0;\r\n\t\tboard.grid.get( { x: 4, y: 3 } )!.color = 1;\r\n\t\tboard.grid.get( { x: 3, y: 4 } )!.color = 1;\r\n\t\tboard.grid.get( { x: 4, y: 4 } )!.color = 0;\r\n\t}\r\n\tnewGame();\r\n\r\n\tconst rules = new Rules;\r\n\tconst { c2d } = canvas[ '2d' ];\r\n\tlet turn = 0;\r\n\tfunction nextTurn() {\r\n\t\tif( rules.isGameOver( board.grid, [ 0, 1 ] ) ) { return; }\r\n\t\tturn = ( turn + 1 ) % 2;\r\n\t\tif( rules.getValidMoves( board.grid, turn ).length === 0 ) {\r\n\t\t\tnextTurn();\r\n\t\t}\r\n\t}\r\n\r\n\tlet selectedSquare: Square|null = null;\r\n\tfunction render( time: number ) {\r\n\t\tc2d.save();\r\n\t\tcanvas[ '2d' ].clear();\r\n\r\n\t\tc2d.fillStyle = '#6c6';\r\n\t\tc2d.fillRect( board.bounds.left, board.bounds.top, board.bounds.width, board.bounds.height );\r\n\t\tc2d.strokeStyle = 'black';\r\n\t\tfor( const { enabled, color, position: { x, y }, bounds: { left, top, width, height, center } } of board ) {\r\n\t\t\tif( !enabled ) { continue; }\r\n\t\t\tc2d.save();\r\n\t\t\tc2d.lineWidth = 1;\r\n\t\t\tc2d.fillStyle = '#8c8';\r\n\t\t\tc2d.fillRect( left, top, width, height );\r\n\t\t\tc2d.strokeRect( left, top, width, height );\r\n\r\n\t\t\tif( color !== null ) {\r\n\t\t\t\tc2d.lineWidth = 1;\r\n\t\t\t\tc2d.fillStyle = color === 0 ? '#222' : '#ddd';\r\n\t\t\t\tc2d.beginPath();\r\n\t\t\t\tc2d.ellipse( center.x, center.y, width * .4, height * .4, 0, 0, Math.PI * 2 );\r\n\t\t\t\tc2d.fill();\r\n\t\t\t\tc2d.stroke();\r\n\t\t\t}\r\n\r\n\t\t\tif( rules.isValid( board.grid, { x, y }, turn ) ) {\r\n\t\t\t\tc2d.lineWidth = 8;\r\n\t\t\t\tc2d.strokeStyle = turn === 0 ? '#222' : '#ddd';\r\n\t\t\t\tc2d.beginPath();\r\n\t\t\t\tc2d.moveTo( center.x - width * .25, center.y - height * .25 );\r\n\t\t\t\tc2d.lineTo( center.x + width * .25, center.y + height * .25 );\r\n\t\t\t\tc2d.moveTo( center.x + width * .25, center.y - height * .25 );\r\n\t\t\t\tc2d.lineTo( center.x - width * .25, center.y + height * .25 );\r\n\t\t\t\tc2d.stroke();\r\n\t\t\t}\r\n\r\n\t\t\tc2d.restore();\r\n\t\t}\r\n\r\n\t\tconst lineHeight = 16,\r\n\t\t\tlines = [] as string[];\r\n\t\tif( rules.isGameOver( board.grid, [ 0, 1 ] ) ) {\r\n\t\t\tlines.push( 'Game Over' );\r\n\t\t} else {\r\n\t\t\tlines.push( `${turn === 0 ? 'Black' : 'White'}'s turn` );\r\n\t\t}\r\n\r\n\t\tlines.push( `Black: ${rules.getScore(board.grid,0)}` );\r\n\t\tlines.push( `White: ${rules.getScore(board.grid,1)}` );\r\n\r\n\t\tc2d.save();\r\n\t\tc2d.font = 'bold 16px sans-serif';\r\n\t\tc2d.textBaseline = 'bottom';\r\n\t\tc2d.textAlign = 'left';\r\n\t\tc2d.shadowBlur = 5;\r\n\t\tc2d.shadowColor = 'white';\r\n\t\tc2d.fillStyle = 'black';\r\n\t\tlet top = lineHeight;\r\n\t\tfor( const line of lines ) {\r\n\t\t\tc2d.fillText( line, board.bounds.right, top );\r\n\t\t\ttop += lineHeight;\r\n\t\t}\r\n\t\tc2d.restore();\r\n\r\n\t\tc2d.restore();\r\n\t\trequestAnimationFrame( render );\r\n\t}\r\n\trequestAnimationFrame( render );\r\n\r\n\tfunction onMouseMove( { clientX, clientY }: { clientX: number, clientY: number } ) {\r\n\t\tconst { x, y } = canvas[ '2d' ].screenToCanvas( { x: clientX, y: clientY } );\r\n\t\tselectedSquare = board.hitTest( { x, y } );\r\n\t\tdocument.documentElement.style.cursor = selectedSquare && rules.isValid( board.grid, selectedSquare.position, turn ) ? 'pointer' : null;\r\n\t}\r\n\r\n\tfunction onClick( { clientX, clientY }: { clientX: number, clientY: number } ) {\r\n\t\tif( rules.isGameOver( board.grid, [ 0, 1 ] ) ) {\r\n\t\t\tnewGame();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { x, y } = canvas[ '2d' ].screenToCanvas( { x: clientX, y: clientY } ),\r\n\t\t\tsquare = board.hitTest( { x, y } );\r\n\t\tif( square ) {\r\n\t\t\tif( rules.makeMove( board.grid, square.position, turn ) ) {\r\n\t\t\t\tnextTurn();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.addEventListener( 'mousemove', onMouseMove, false );\r\n\tdocument.addEventListener( 'click', onClick, false );\r\n\tdocument.addEventListener( 'touchstart', e => {\r\n\t\tfor( const touch of Array.from( e.touches ) ) {\r\n\t\t\tonClick( touch );\r\n\t\t}\r\n\t}, false );\r\n} )();\r\n"]}