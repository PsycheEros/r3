{"version":3,"sources":["../../../ts/rules.ts"],"names":[],"mappings":"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","file":"rules.js","sourcesContent":["import GameState from './game-state';\r\nimport Board from './board';\r\nimport Square from './square';\r\n\r\nconst directions: Point[] = [\r\n\t{ x:  0, y: -1 },\r\n\t{ x:  1, y: -1 },\r\n\t{ x:  1, y:  0 },\r\n\t{ x:  1, y:  1 },\r\n\t{ x:  0, y:  1 },\r\n\t{ x: -1, y:  1 },\r\n\t{ x: -1, y:  0 },\r\n\t{ x: -1, y: -1 }\r\n];\r\n\r\nfunction getAffectedSquares( board: Board, position: Point, color: number ): Square[] {\r\n\tif( !board.boundsCheck( position ) ) { return []; }\r\n\tconst square = board.get( position );\r\n\tif( !square || !square.empty || !square.enabled ) { return []; }\r\n\tfunction direction( { x, y }: Point, delta: Point ): Square[] {\r\n\t\tconst squares = [] as Square[];\r\n\t\tfor( ; ; ) {\r\n\t\t\tx += delta.x;\r\n\t\t\ty += delta.y;\r\n\t\t\tif( !board.boundsCheck( { x, y } ) ) { return []; }\r\n\t\t\tconst square = board.get( { x, y } );\r\n\t\t\tif( !square || square.empty || !square.enabled ) { return []; }\r\n\t\t\tif( square.color === color ) { return squares; }\r\n\t\t\tsquares.push( square );\r\n\t\t}\r\n\t}\r\n\tconst squares = [ square ];\r\n\tfor( const delta of directions ) {\r\n\t\tsquares.splice( squares.length, 0, ...direction( position, delta ) );\r\n\t}\r\n\tif( squares.length <= 1 ) { return []; }\r\n\treturn squares;\r\n}\r\n\r\nexport default class Rules {\r\n\tpublic isValid( board: Board, position: Point, color: number ) {\r\n\t\treturn getAffectedSquares( board, position, color ).length > 0;\r\n\t}\r\n\r\n\tpublic getValidMoves( board: Board, color: number ) {\r\n\t\tconst squares = [] as Square[];\r\n\t\tfor( const square of board ) {\r\n\t\t\tif( this.isValid( board, square.position, color ) ) { squares.push( square ); }\r\n\t\t}\r\n\t\treturn squares;\r\n\t}\r\n\r\n\tpublic getColors( board: Board ) {\r\n\t\tconst colors = new Set<number>();\r\n\t\tfor( let { color } of board ) {\r\n\t\t\tif( Number.isSafeInteger( color! ) ) {\r\n\t\t\t\tcolors.add( color! );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn colors;\r\n\t}\r\n\r\n\tpublic isGameOver( board: Board ) {\r\n\t\tfor( const color of this.getColors( board ) ) {\r\n\t\t\tif( this.getValidMoves( board, color ).length > 0 ) { return false; }\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic makeMove( gameState: GameState, position: Point ) {\r\n\t\tconst { board, turn: color } = gameState,\r\n\t\t\tsquares = getAffectedSquares( board, position, color );\r\n\t\tfor( const square of squares ) {\r\n\t\t\tsquare.color = color;\r\n\t\t}\r\n\t\tconst { length } = squares;\r\n\t\tif( length > 0 && !this.isGameOver( board ) ) {\r\n\t\t\tdo {\r\n\t\t\t\tgameState.turn = ( gameState.turn + 1 ) % 2\r\n\t\t\t} while( this.getValidMoves( board, gameState.turn ).length <= 0 ); \r\n\t\t}\r\n\t\treturn length;\r\n\t}\r\n\r\n\tpublic getScore( board: Board, color: number ) {\r\n\t\tlet score = 0;\r\n\t\tfor( const square of board ) {\r\n\t\t\tif( square && square.enabled && square.color === color ) {\r\n\t\t\t\t++score;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn score;\r\n\t}\r\n\r\n\tpublic reset( gameState: GameState ) {\r\n\t\tconst { board } = gameState;\r\n\t\tgameState.turn = 0;\r\n\t\tboard.reset( 8, 8 );\r\n\t\tboard.get( { x: 3, y: 3 } ).color = 0;\r\n\t\tboard.get( { x: 4, y: 3 } ).color = 1;\r\n\t\tboard.get( { x: 3, y: 4 } ).color = 1;\r\n\t\tboard.get( { x: 4, y: 4 } ).color = 0;\r\n\t}\r\n}\r\n"]}